{
	"info": {
		"_postman_id": "3a734c86-f8c1-4b5b-86c3-fecff8beed96",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23645246"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Получить статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Получить статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"let parsing_response = pm.response.json()\r",
							"console.log(\"parsing_response\", parsing_response);\r",
							"\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"name\", function(){\r",
							"    pm.expect(parsing_response.name).to.equal(\"Marina\");\r",
							"});\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"age\", function(){\r",
							"    pm.expect(parsing_response.age).to.equal(\"40\");\r",
							"});\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"salary\", function(){\r",
							"    pm.expect(parsing_response.salary).to.equal(1500);\r",
							"});\r",
							"\r",
							"//7. Спарсить request.\r",
							"let parsing_request = request.data\r",
							"console.log(\"parsing_request\", parsing_request);\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name from request\", function(){\r",
							"    pm.expect(parsing_response.name).to.equal(parsing_request.name);\r",
							"});\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"age from request\", function(){\r",
							"    pm.expect(parsing_response.age).to.equal(parsing_request.age);\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"salary from request\", function(){\r",
							"    pm.expect(parsing_response.salary).to.equal(+parsing_request.salary);\r",
							"});\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log(\"family\", parsing_response.family);\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"u_salary_1_5_year\", function(){\r",
							"    pm.expect(parsing_response.family.u_salary_1_5_year).to.equal(+parsing_request.salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Marina",
							"type": "text"
						},
						{
							"key": "age",
							"value": "40",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Получить статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json\r",
							"let response_parsing = pm.response.json()\r",
							"console.log(\"response_parsing\", response_parsing);\r",
							"\r",
							"//4. Спарсить request.\r",
							"let request_parsing = pm.request.url.query.all()\r",
							"console.log(\"request_parsing\", request_parsing);\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name from request\", function(){\r",
							"    pm.expect(response_parsing.name).to.equal(request_parsing[0].value)\r",
							"} );\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"age from request\", function(){\r",
							"    pm.expect(response_parsing.age).to.equal(request_parsing[1].value)\r",
							"});\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"salary from request\", function(){\r",
							"    pm.expect(response_parsing.salary).to.equal(+request_parsing[2].value)\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"console.log(\"family\", response_parsing.family);\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"dog_name\", function(){\r",
							"    pm.expect(response_parsing.family.pets.dog).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"dog_age\", function(){\r",
							"    pm.expect(response_parsing.family.pets.dog).to.have.property(\"age\")\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"dog_Luky\", function(){\r",
							"    pm.expect(response_parsing.family.pets.dog.name).to.equal(\"Luky\")\r",
							"});\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"dog_age_4\", function(){\r",
							"    pm.expect(response_parsing.family.pets.dog.age).to.equal(4)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Sveta&age=45&salary=3000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Sveta"
						},
						{
							"key": "age",
							"value": "45"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// //2. Получить статус код 200\r",
							"// pm.test(\"Status code is 200\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });\r",
							"\r",
							"//3. Спарсить response body в json\r",
							"let response_parsing = pm.response.json()\r",
							"console.log(\"response_parsing\", response_parsing);\r",
							"\r",
							"// //4. Спарсить request.\r",
							"// let request_parsing = pm.request.url.query.all()\r",
							"// console.log(\"request_parsing\", request_parsing);\r",
							"\r",
							"// //5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// pm.test(\"name from request\", function(){\r",
							"//     pm.expect(response_parsing.name).to.equal(request_parsing[0].value)\r",
							"// });\r",
							"\r",
							"// //6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"// pm.test(\"age from request\", function(){\r",
							"//     pm.expect(response_parsing.age).to.equal(+request_parsing[1].value)\r",
							"// });\r",
							"\r",
							"// //7. Вывести в консоль параметр salary из request.\r",
							"// console.log(\"salary from request\", request_parsing[2].value);\r",
							"\r",
							"// //8. Вывести в консоль параметр salary из response.\r",
							"// console.log(\"salary from response\", response_parsing.salary);\r",
							"\r",
							"// //9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"// console.log(\"salary_0 from response\", response_parsing.salary[0]);\r",
							"\r",
							"// //10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"// console.log(\"salary_1 from response\", response_parsing.salary[1]);\r",
							"\r",
							"// //11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"// console.log(\"salary_2 from response\", response_parsing.salary[2]);\r",
							"\r",
							"// //12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"// pm.test(\"salary_0 from request\", function(){\r",
							"//     pm.expect(response_parsing.salary[0]).to.equal(+request_parsing[2].value)\r",
							"// });\r",
							"\r",
							"// //13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"// pm.test(\"salary_1 from request\", function(){\r",
							"//     pm.expect(+response_parsing.salary[1]).to.equal(request_parsing[2].value*2)\r",
							"// });\r",
							"\r",
							"// //14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"// pm.test(\"salary_2 from request\", function(){\r",
							"//     pm.expect(+response_parsing.salary[2]).to.equal(request_parsing[2].value*3)\r",
							"// });\r",
							"\r",
							"// //15. Создать в окружении переменную name\r",
							"// pm.environment.set(\"name\");\r",
							"\r",
							"// //16. Создать в окружении переменную age\r",
							"// pm.environment.set(\"age\");\r",
							"\r",
							"// //17. Создать в окружении переменную salary\r",
							"// pm.environment.set(\"salary\");\r",
							"\r",
							"// //18. Передать в окружение переменную name\r",
							"// pm.environment.set(\"name\", \"Lera\");\r",
							"\r",
							"// //19. Передать в окружение переменную age\r",
							"// pm.environment.set(\"age\", \"25\");\r",
							"\r",
							"// //20. Передать в окружение переменную salary\r",
							"// pm.environment.set(\"salary\", \"1000\");\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"console.log(respose_parsing.salary)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Kira&age=28&salary=2500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Kira"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "2500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"url\", \"http://162.55.220.72:5005/\")\r",
							"\r",
							"//5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 6. Спарсить response body в json.\r",
							"let response_parsing = pm.response.json()\r",
							"console.log(\"response_parsing\", response_parsing);\r",
							"\r",
							"// 7. Спарсить request.\r",
							"let request_parsing = request.data\r",
							"console.log(\"request_parsing\", request_parsing);\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"start_qa_salary\", function(){\r",
							"    pm.expect(response_parsing).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"qa_salary_after_6_months\", function(){\r",
							"    pm.expect(response_parsing).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"qa_salary_after_12_months\", function(){\r",
							"    pm.expect(response_parsing).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"qa_salary_after_1.5_year\", function(){\r",
							"    pm.expect(response_parsing).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"}); \r",
							"\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"qa_salary_after_3.5_years\", function(){\r",
							"    pm.expect(response_parsing).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"}); \r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"person\", function(){\r",
							"    pm.expect(response_parsing).to.have.property(\"person\");\r",
							"});\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary from request\", function(){\r",
							"    pm.expect(response_parsing.start_qa_salary).to.equal(+request_parsing.salary);\r",
							"});\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_6_months from request\", function(){\r",
							"    pm.expect(response_parsing.qa_salary_after_6_months).to.equal(+request_parsing.salary*2);\r",
							"});\r",
							"\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_12_months from request\", function(){\r",
							"    pm.expect(response_parsing.qa_salary_after_12_months).to.equal(+request_parsing.salary*2.7);\r",
							"});\r",
							"\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_1.5_year from request\", function(){\r",
							"    pm.expect(response_parsing[\"qa_salary_after_1.5_year\"]).to.equal(+request_parsing.salary*3.3);\r",
							"});\r",
							"\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_3.5_years from request\", function(){\r",
							"    pm.expect(response_parsing[\"qa_salary_after_3.5_years\"]).to.equal(+request_parsing.salary*3.8);\r",
							"});\r",
							"\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"u_name\", function(){\r",
							"    pm.expect(response_parsing.person.u_name[1]).to.equal(+request_parsing.salary)\r",
							"});\r",
							"\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"u_age\", function(){\r",
							"    pm.expect(response_parsing.person.u_age).to.equal(+request_parsing.age)\r",
							"});\r",
							"\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"u_salary_5_years\", function(){\r",
							"    pm.expect(response_parsing.person.u_salary_5_years).to.equal(+request_parsing.salary*4.2)\r",
							"});\r",
							"\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}